package string.basic;

import java.util.*;

//Completed GFG -correct
public class RemoveCommonCharsAndConcatenate
{
    public static void main(String[] args)
    {
        System.out.println(concatenatedString("prfhxwvdfsrfyjjrxeivexjkzqtojbthouczcrctfixhqouvvkpgomberzuxprloqzmpgtwxmohxrpwbutrqusnznmkidnpknidbjlzxxmyhwztbphoyivztwhrnjutbrhtfgmppbciegmxxbboxmpotxlghizfchbtvzuxaygeabjscjugbkqrdceohewoypbqyfgxzqnhtuqofcmlimwmriotfrjxdemwgucskvbxqbkwkpilzrbqaxepvbrwntcgxbxixroenoymrohrovxveulmbpieezwkczgegbehdyjmzsfhnzpbglpcmzupejvmoujcfeqfoazaqemrybmqefceylbxijpajtxecjewafgkkdhhszacwzhfdhiuzwicjelfhiadccfcsertmqablpxrccvhnkrwvopceswmghzigoxvslhrbizrlonicabavzkbbsjtnqznqipbecfvpcgvzvroxcnqdqlfmdeazyhtbvmeortxvicxyhwfazvabsaiowyluxkmrwngtlfstuzdgnaodobfuenwsfzinitzezaybwqjifiyiznjdgjbvrpniljtyauafhctepjeeeykikzwqktgaqpzqylytgrprdrdfhknzxowlcamiydezcyglgysfxpweuyomzmjgyicvciqivxfahpyzietylrmarmdwkyhpkabkvokxefsqiqrwxqvatdhzdtlglwpizgbvetvkkneaotatkzqgbmoyblstfqmwuiiiyyxuskzoeldogbeydxzxhllrkjukqgmqmdgkpzygjbndbnbzezteaaayfurqcmrxrtttkvrisrbdpofrvehqhlzotipebeubjudesaoqummsrwzarmhnjjgfzuqygwpjvtdwiwvptvdhdatdldvubqrteoecinoripiryoegewmqejuixzwokiusjmhzkyatpempjrbpiuezddwkdasursrlpjqqicdhrftsecvmgamfzcersdoqjvmtraljndeobmodocespacwldalwrkeuqqckpjsztodomxvwnztoapqzjxtwflgfvdekhraavbmmyomljrngvdwktbxbtdlckjqmpnvyikjakbwapargqqdorftefqavvgadrlzdntcgrexsmsbdiokkdpsiilcfiumgmglusbgvwrmlylchbkgqzygttonvtftsdziaviahfybijnwzuoyfbyzedaopcbxogenuidokfkcjahzkibrgzrurmxhudpulkuoizfwaaheyzxiprsipttxwowukgfhnuflharyuxryauitnibkjlercblqyylodilkkrkpsjsycpkazxebevxomhiveghgqikfuiylsacgizickjpfzttkvkzlxrplljayyzumrjxfflmhszqomxseamaqkpzpzcnxrtqbrjvxjnllarbnsnfqhnozygvpdudqqzqmhouuletjalezmauvojafobbncbjtvucoayvcvppcbqkqphdvytguqxzbopppnmcvglkuoaxqxofmqacmdmhopwwuckixxpoxozervccngdztwghzgrdnxxehmczyimevkwypuzyrylmgrieuccesvtviltwytiunfmweacfkovaliyapipaizsprpjbizwakxjuulqpusihazdlrdjhqypgyzyvqtojipxtwupudigxoupiihnxfvjgbigtsrwrximuslgcqobmryvsybytqseznwjvxukamhizgnavkzvxkachqpczsarutsxojwcofjpjxntyeywsorgjctpkkhjhdmsugmazfvgmeqxxqcituyiznahftuoehdnjwmorqysabvdiaorcafvgfjikhvezttljwugqswavwtuzdmfhihlyebadgtoiizeydsqxkogdkdpsuqwqirtunvhrxpxjtshcfrzqwxuufbhxjrappybkwlhjueiqarvfubuvoathzieamvddmjsuchsfrziftxqagiiqeggscdkrjvjxuhroliluxyzyuyvjublzhujurtsrmifxllgqxsvamyfowlgxkmvgetpirdnewnwikgowfutbxrvbtuupswzzpljgnqfyovlcvflwhnfdcekvrnwfxqywabvqerrbmwejegmqranirxsmfhkjmmxkbrmazsgxwvfsaowvmaamtscqwnhunnolzivkfomeccvvdeurmljperzxkgixsxvuzmizfdmmxqnnhtekpapewnrddzlooxminooheltwhroezkoocvitouipiyokjdrjpfadajtlceunhgyhntibsojjnzovvgolxzojtkthnevwfeubfyzbwogpmwstahtdynkkugltxdrfyceiqjphryhihuhwvrywgdvqatodkbuccppnqzqjefklfposphvwfaiekmtdehwfikmyewwtzyqdnbdfkgneegoyirchcpxquwqyarhrgsvnkkyfsxzybkjpwzaoaslzievfxybglguvvtapdwkutrulssnsynejptiknmpwyqabhmitiusmktituccsoflgrwdzkhshxfakreeudmlgifzjocchjlfaacyhtevxcnqumjpfarqmwxsnejjxyentxuvssqkineaqfqghqquqqenhptyhrdrdaajnhyhgarmxgqvjswilbqjxeeaogtbmlnsctzzhntkghmbdcasxhkxjlbhzrocctcmysnphrjeuvvhvilszqfvvguspbrlpdywrydkwxagptgxbleykbglgguqihlmodaddwrmfvuoswwakfbaruawqfozdbtsllpdmmymkjxatmbrqmvibgetrzzwejsueasxwbovhoghzvqyzodycxhdxlaobdzelolycdqvggnokpbpnumkzzflytzdoxvzmlpytmhqbrzexmsdarpotdnjqfxfvaqihfqltdvpinljzqspwlmrinmrnmezypbhydwwzcrnvvzvehgwmcgyrxnmjmjkrgybczmclwfkletnfuoyccrqorrvbqqhandtldhwtjuomwauyowltoixhstofewgcnvvenftvhedtxsgjvhnaldlgzgcygknjkrwznkvnzkfglearnlgdwrdzglgzpxmocrgjejsttdrcjtrarvoieryvhyvormxgolawhqxqlkyusfzwvozbaekokspbrpghionrfmhymawseuhbdfzwjzidedurpjbndcbmyobcavxhrgshqjmegivzutxzdbqntgvmqfdphibhdfwrkrbioikykplfcqhouzbruobhgvhioaqdzmpmfzvcsipeutlglgiecsnsjhhdtqzkyqzhprinimfiftrwysfxqwprbmvoppbcjudjlrcfdsflkdkwzwyofpbvctyhcwyezpsajoqpraehzsguxtwjlxkkazrmabnuuwowhzveqppwmrzssqwyzbbjkicjuclwiibtizvajvdosqqmebomrfnkktzluxzxcwdyyszqehratoykepzcrtedjctmylejwjlflmkyomdmwmqzrqskixqwrwoftmghqcxrctkkredfbvuttgttadqvobcutdhnrkxnsmngnniuckvtoekhpmlynmxofoqkotujffcnluzruawyshcaooezsqsdzyqgbknbnuirjpkudqzwvluqaccodckxtyhbosmlklxjspydmnrlsxxvjvzsjlbkedsdtkczqlktafggrbadohkfvfdnctphyqwawniocmwsfeyewxgmztjtiotlizeavuprahgrfpwyyrcecfchtoepizuughzeiuwesdyajqcztxlslneopryiwpsouumouevcybnsuaodcvhjtimlndkvxiytxchggdxfaiaxjihwasabppsvljyudgphvkhcwzfqmaojgvytoasktipoenbliwtlytjsmmdjlugonwqegscoxwuenjecqsorrtbwoxgwqfwwbchqqjguazjhnobnihvoqxafcvpjlqwigqcfuchusmtctifbdgjwspuiziahumtodazyuoqtaphneksifgrcdcafnirudfqxyrnvnysbwftafdvqmsgyxgpbcuuvpyrqpgzpothvcrgwhihwwsoftkxkesthyplhdapstwxhlzehbciqmtvlpvvuytpaktbcaaifmgixzesxdtduwrgbrikzmcruomjfehugthioqsxybcfcgekzkyotumqlnkqmwiimdyvdzmpoxfkbjltoopkolezrdzjigydfdcgqlsxyslitqgqebkvlijshiauucsrspuwwwzslwgfyrjwxwjpaxupmjlmajgvanrurmichvjgzkgtjdlbaobicesiptfigfhyvzchlubjwzkeoxkxawhcqvggxjimrxrnulucrmvexmbmlixoyvoyusjwodaslstbqbduxzcgavwnvofbsnmjicmduhuzjtkntmcwvncgvmfasocmvcwtgyaqvqebfasclkpfzpqkndtevcnycvtqytosyithbvokkrfrrtdsfkzbkxaejbbvrwpxngdlpzdawnbojzuvvnsxvrugjywdbkvzbmlgxiugmxmtipckuxfvoqliearahgdobkrvfeebkyzngecuubksphmfepydspsyvpaoxotswetkjxjqppybacsaraenqyfnvrhylswvqnjvhwayxddsulcgzesvtrerrsbrnlmvobdxwtucaewynxvskzvlzuvajnzagfapifakiwfvgwfguujoelotymuawabiuiffuocxlasmwfbegmpqwaionzpirfinhlyifdnlkksekorjputvgfindjttcnoinksyhpkgfkifbdjznagifasdczgiqmriejmwqfsdhallkkusjtarwdjstcpdtjkzijnrowzyaeiydcatgpytpbynqayzpqegzbzfhpngtswkmzwmyojdesmmrmhworneujddrntgsrfjbwojmtzjxbaqsfdsstndhngggodupmyhalpwemnkeyrwhgzpuwhomfbgmasdxlhwiayesytvglievvbqstytvnphwhcdekkazuykijygbhmhmtpznikhyabdkefdxwmwxhalityxnuutxgamudmtnhowfqyyrpexsnfjevkvmlgbhgaibppjcujiqrcgcnuqgnsmefzhmefuucaiguqmbztjplzqkzaxtelfatcyhpmagivivimyfmuremttvlryjvpfhomljvmulmsxqmdokwbwwjpdfsxywjfozcbcusunlfwyukdldavcholxswxcajyzoxgpgwrvqhihqwtjhslvoveyudfipaxpqqlreqkzkobeqvphmaghpdvyoupfqpfsrdnzuvtwkhhodyyggwcrntlyazhibflfdtixbsrsoozattxmwmagkfvpgmlygsdtuyvwqetfekuduknwbrqvazlxegmptsootgpfskcgknnwehzptodabsmywzhzwvlriyusuvheotxddamvhdxbnuwlmdtruodhguzusshoszvowvzwnafxljqlavwaicvulnkehudckxmeniuxragljrujgvxhatyuyvgihnmkjpfgxwwxprrzwzjpvkrmhhtsfylsjtvyrqhudmajdhdmpmgfbdvqfmvlpjelruafrfwvxljizfufqqotvpirwqnmegyqejwbmmxirbcyjjhmftgvemisgsxrvpqmmaaagnbrrscpoepikfqbedusjvsoyjnuyhlrdyjphvswiedarthvdnytnntdkmrsaewwwjotubnugzhgbbshuohwzufcdarkrnawcpnfjtjxbwjbyzqxrivtphbfhmtltvsozbbcqhpsyttuhagobotxygoqkmqibjewsdescftamklduzbteqozfvthgxihjohtrdbyxnbrxwkuiekzhcolmbsuitgfdoickpnlvfcgseconpwkctgcxkgvpifzrhagngvjicfoywuugcoqncurxzdefldvdaklepovdvunfekpzvgegwdqletrtanscppjxgdiwpezumcznkrhbpnmppfnzyjndeuhcnxgghxpvwmnarceznjisliljtiwisxgawsvxreeofkexsklaeyqiykhpngjmpdxxshfutxtbcjeenorlgdytjxivxurdgwognyelnjdojyypspdhcbdvgizzxxbvzdpavoqcuhakckyktyliihquhxuezsoickunpnlflayzxnjhgaoyuakufvseqqlcicbboutiebaqbeiuutkwysyxivvsyfsgnuofggmergbmlqjnsgrptgczcowrvojurugmfhnfvudhdyqrpnihzncjddyfgjvjbhaemulkohxnftkszglbcoptqzrejxbkpjvifhlfgdsohxumouofhicmurabxqvbtdnmwfvfzhecpltjtydfpyxxjdofqfmawjdivmvkqqceyzuvuolpuvporgneufllzovarfcawgbrtkvwptrdkhdtskinokkyazkmcnnqlznjackwfvzhibdrxblsmdwxvfzempvcvmmrbqwtdlatagomnobpfgwwwzsgpifxqbdxzfkohrhhwbthmmhgdoegvzcvfabnvjbdsmilzwknwrqqwjhvmbhlgipzfqrtqmvzmcpzjnyenlpoflyglgxvfumruokhlqkesxmtfevskyzlilajmghsjaekbqxnrwacywaveasfpplrjjoaxamufohimpolhfruhyltpjetunswiixqjdspibifrkctfxqspgdoagfypoubucurmqcluowevpdipgolmubhxbufndukahxdifefyntmomwuejbzpgisrxgjtzjwudauipdjujaromoyaaoouafmihnezhzzewhgeiekeqcgwgbcjaycxkcnukjbxwrydxqvtqvvnxrhccsrdqrdpjjlgxbytrxdrzrdzarqjezqdradjbawxjdwmbspbhccoyblyxxrokjxvbsooicrtjbyohzgwmjwqfjxrplfmksowcgbyuvthpqfjjpfxfmcmsyaemgxmftnxosongtuhffwxsoieipwwlsqitflnsjwgcrmjevpvugpfxsynifvokkozggsndqtawotrjosczvvfvsjtvmxcfouneaqebunbznasuzyjmvbbvbwiresodinzwltqeqyrdtlpkftmphvmotwegfkzwipzhofcwtafttqzoqedfjxytblypsxwizljogehepjxqbjfzczsmyvgyyhueyjmvxhyspkqjdpnbowgmsfspdhmwquvbjofyowuaozoeeiextwdxzesnccqdoovgpofuhwvpdhcqacwvwlbdzleprdntpyaewwhifzavbjprdunwwyikrbumdgtpvuziisfnapnfzvuhgeamxdglcneaiyaeejgnsvhlpqbqzzqpxudaihrqeayyspjwlnfklossftcjcbdliyfuqaksskvehzsdodvxomcputurtzzovmqanqmwzwqpourgpxmiiuceiqchyxrhtaghoihydkjhdtpdgcywbcoucdmywbfnqqoqbyzfcoqlhcabqosnhxygemheoenhxoavzzepbygqxulktmewuyhjsjhscamrdmywrpnfjylnilyqcmpcdlzswqypzjyktxpsuxdlnwvbcqxcihzebdepfpniixmyhbonypoklatkxdnvhrktvathvqcaxyqzhuiyftmhegdxbwkxkkzpvmlmjcbqoecyzgeghrfrxgcmegxaewujtniryfhjuvnqlfnwmbznyturyqonhtahimqifgmikvxqblgvgmhniznbawnearroxvhygwaugsslriwagweapsyzlxnikytuhxbellirxtlndfcgptcngsfngdggjntokfryqhcyeyuatksviqplujerluotaohrmxupllfqqetxupqixbwszbwktwlmyrptxvaxcaholodmnykwalliemgmoxelxgwijjnzquadptfaxddswpinbprezdghnnxxkzdjguvyxcramogdwvmrbyecjsxmzebkmztgriaesrpoinlevoxpvfqkeudvoryczduhtcvxfbfkksywwkjbvwsznvpolikilsklyqjasvbpjrhsdkryudrmuypwwyrdridvvqlamhfhdtfeccuulccpelxctztaoxrnvebqmgnffamvabuzohlqckqxmmrknzbixgdlagnaetifioluqkmwalokvsbocunmuopgsbxecjiuoszakgnrvofboobjncpoubncpwjxitzthqjbijdaqiwzxbvpztkgjhyoizmhzmbbzeblxonmpyydexiljvixoeflgvdqjmesrbntxkeshahcrtqextyguoydjccpzyhruzsppvjlmzlfdkxdevpvbzxvbdlvwqqkqpaysbncnrunvwqpbdsayffikmteubhauzmfmrlmdecvwygbwfbgkayhsdahvhqdfscdjkqniomguwdyelgrznqzlgiuelqmmbkxswfspfzjlqveyzrkbawvjtdxoepononahkmupvzcmmxwklckfomeudkowmpeikhlimtimaysatvshitouleoolmclqsxotxetkdfyluisvzswkohlixccnnxpaklemvmvyoupyupsrzptcqovbqlncjcalozmpbolqyihutkszcmrykoghxuywanjdzrfnwlngircwfwgsdnoxwamsuonvnjjxopijwsroyuizuqzsoofbiqmhrkshjpiszonkdopppznempcxbyfbfvrkexaemmbngvnxuieblclhcnseopadlkbomsqdgtndgpjydakxcsubyriogghgggljuobytvmgnfticrfwfwudopkzqiuibymzmxtemfjzdtmzerkkiyxftlecdqygatiyyeiantwdlneafhexxymyacibiruuruaajaieuieolckbubhczngordwuokkmbtbsroxueoirqqvdbwjwxbozayxjykzaybdhyxropfceospbkbfjyxetwesapcoglhvhfyowagrdfpdvkavknpmkdxbloexuyqmpegkapgefyjpmlmxznzhtlaikdtpstbipjnxauhbajyusoxfoxqqewrzpwzrzjfdnxqotyxudhznezomjqnrmfdztwwzfsfmzpecdbdrogmzsgzdwpafklrespnjikkcnlckkqpacmcghmlyfytrgojyfjlaoebqrjbuixqfhkayelrrllzfksgmdlotbyqmohuolwtapeqxubleisuistkdirjvrgcjazctvgjzmqqxgftmvilvggcdieytwvcqscuioptiavmqcdodbwvodbexiahjkuzrnjtabnkjqnofjfsfulrshgpyrlvpsjwhzaztyrbwqwvptcereiqedcsspkakcweugfjhgosfrlnzqdxoxqnkxgwdjbmhqsesvrssglkxbkhrhmicjeliawwilujwwbscjeriegpzlsjnlhwdptafekvwbysumnluuynxqjxyhlbgpqaycmjguxagpnbyaurmhohfdslwflgbqvprabpkmjjtxzzqspokaukycdypanzzmbqocshdhqdnzdwnbntznkkotbigevawxxjviqqolgjeijfnfpxcmrimvgzskrjnulvlurhmpwehcixbpkmmtgffkgkbwqrvdbcokvxxfhzdkqxsrpktyhgembtyxzsmcqsfftiuxsrgdbwwmrkzvoodtafknnnnzekhrjvltinrfsoeazmnilkyfjbtafzywjnddusfpqlhezqbaqtcwgjccyyusmflzahxrwvavjuuotadseasvuucimxmvnydiksugflzfsglninwrpuezqkdvkrhqvjsmoxxeuxrckbpecdivwsdimjrcylgwfpezwqjjdowmvoepmtwlxbbwasjfa","enrarreilbkffrvuywmmoxwejp"));
    }
    public static String concatenatedString(String s1,String s2)
    {
        String res = "";
        int i;

        HashMap<Character, Integer> m = new HashMap<>();
        for (i = 0; i < s2.length(); i++)
            m.put(s2.charAt(i), 1);

        // Find characters of s1 that are not
        // present in s2 and append to result
        for (i = 0; i < s1.length(); i++)
            if (!m.containsKey(s1.charAt(i)))
                res += s1.charAt(i);
            else
                m.put(s1.charAt(i), 2);

        // Find characters of s2 that are not
        // present in s1.
        for (i = 0; i < s2.length(); i++)
            if (m.get(s2.charAt(i)) == 1)
                res += s2.charAt(i);

        return res.length() == 0 ? String.valueOf(-1) : res;
    }
}
